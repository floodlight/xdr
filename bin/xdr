#!/usr/bin/env python
import os
import sys
import xdr.parser
import argparse
import pyparsing

def main():
    parser = argparse.ArgumentParser(description='XDR compiler')
    parser.add_argument("input", metavar="FILE", type=file, help="Input file")
    parser.add_argument("--target", "-t", required=True, choices=["python", "lua"], help="Target language")
    parser.add_argument("--output", "-o", metavar="PATH", help="Output directory")

    args = parser.parse_args()

    if args.output:
        output = args.output
    else:
        output = os.path.basename(args.input.name) + "." + args.target

    if os.path.exists(output):
        sys.exit("Output directory exists: " + output)

    try:
        ir = xdr.parser.parse(args.input.read())
    except pyparsing.ParseSyntaxException, e:
        sys.exit("Parsing failed: %s at %s line %d col %d" % (e.msg, args.input.name, e.lineno, e.col))

    try:
        backend = __import__("xdr.backends." + args.target, fromlist=["xdr.backends"])
    except ImportError:
        sys.exit("The target %r is not supported" % args.target)

    backend.generate(ir, output)

if __name__ == "__main__" :
    main()
